{"ast":null,"code":"var _jsxFileName = \"/home/pi/TT/react-api-demo/src/MqttSubscriber.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MqttSubscriber = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const client = mqtt.connect('wss://broker.hivemq.com:8000/mqtt');\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe('reefet', err => {\n        if (!err) {\n          console.log('Subscribed to topic');\n        }\n      });\n    });\n    client.on('message', (topic, message) => {\n      setMessage(message.toString());\n    });\n    return () => {\n      if (client) {\n        client.end();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MQTT Subscriber\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Message: \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MqttSubscriber, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");\n_c = MqttSubscriber;\nexport default MqttSubscriber;\nvar _c;\n$RefreshReg$(_c, \"MqttSubscriber\");","map":{"version":3,"names":["React","useEffect","useState","mqtt","jsxDEV","_jsxDEV","MqttSubscriber","_s","message","setMessage","client","connect","on","console","log","subscribe","err","topic","toString","end","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pi/TT/react-api-demo/src/MqttSubscriber.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\n\nconst MqttSubscriber = () => {\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const client = mqtt.connect('wss://broker.hivemq.com:8000/mqtt');\n\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe('reefet', (err) => {\n        if (!err) {\n          console.log('Subscribed to topic');\n        }\n      });\n    });\n\n    client.on('message', (topic, message) => {\n      setMessage(message.toString());\n    });\n\n    return () => {\n      if (client) {\n        client.end();\n      }\n    };\n  }, []);\n\n  return (\n    <div>\n      <h2>MQTT Subscriber</h2>\n      <p>Message: {message}</p>\n    </div>\n  );\n};\n\nexport default MqttSubscriber;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAGP,IAAI,CAACQ,OAAO,CAAC,mCAAmC,CAAC;IAEhED,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCJ,MAAM,CAACK,SAAS,CAAC,QAAQ,EAAGC,GAAG,IAAK;QAClC,IAAI,CAACA,GAAG,EAAE;UACRH,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QACpC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFJ,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,CAACK,KAAK,EAAET,OAAO,KAAK;MACvCC,UAAU,CAACD,OAAO,CAACU,QAAQ,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAIR,MAAM,EAAE;QACVA,MAAM,CAACS,GAAG,CAAC,CAAC;MACd;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBnB,OAAA;MAAAe,QAAA,GAAG,WAAS,EAACZ,OAAO;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhCID,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}